library(tidyverse)
my_data <- tribble(
  ~'id',    ~'spec', ~'test1', ~'test2', 
  'span01', 'g1_lo',  64.31,   69.2,
  'span02', 'g1_lo',  59.81,   63.7,
  'span03', 'g1_hi',  66.08,   70.9,
  'span04', 'g1_hi',  72.78,   79.2,
  'span05', 'g2_lo',  68.29,   75.4,
  'span06', 'g2_lo',  69.22,   76.7,
  'span07', 'g2_hi',  71.36,   77.2,
  'span08', 'g2_hi',  80.37,   88.9,
  'cata01', 'g1_lo',  75.63,   83.6,
  'cata02', 'g1_lo',  71.25,   78.8,
  'cata03', 'g1_hi',  69.09,   74.6,
  'cata04', 'g1_hi',  72.35,   80.7,
  'cata05', 'g2_lo',  71.66,   77.9,
  'cata06', 'g2_lo',  69.01,   75.0,
  'cata07', 'g2_hi',  69.86,   76.0,
  'cata08', 'g2_hi',  77.34,   85.6
)

#tidy data: row = observation, column = variable
my_data %>% 
  ggplot(., aes(x = test1, y = test2)) + 
    geom_point()

cor(my_data$test1, my_data$test2)
t.test(my_data$test1, my_data$test2, paired = TRUE)

#gather: converts data from wide to long format
my_data_long <- my_data %>% 
  gather(., key = test, val = score, -id, -spec) %>% 
    as.data.frame %>% 
  ggplot(., aes(x = test, y = score)) +
    geom_boxplot()

#separate: separates variables in a column
my_data_long %>%
  separate(., col = spec, into = c('group', 'prof'), sep = "_") %>%
  ggplot(., aes(x = group, y = score, fill = prof)) +
    facet_grid(. ~ test) +
    geom_boxplot()

my_data_long %>%
  separate(., col = spec, into = c('group', 'prof'), sep = "_") %>%
  ggplot(., aes(x = group, y = score)) +
  facet_grid(prof ~ test) +
  geom_boxplot()

View(my_data_long)

my_data_long %>%
  separate(., col = spec, into = c('group', 'prof'), sep = "_") %>%
  separate(., col = id, into = c('lang', 'id'), sep = 4) %>%
  View
  ggplot(., aes(x = group, y = score, fill = prof)) +
  facet_grid(lang ~ test) +
  geom_boxplot()
  
#spread: opposite of gather, converts from long to wide
  my_data_long %>%
    separate(., col = spec, into = c('group', 'prof'), sep = "_") %>%
    separate(., col = id, into = c('lang', 'id'), sep = 4) %>%
    spread(., key = lang, value = score) %>%
    ggplot(., aes(x = cata, y = span, shape = test)) +
      facet_grid(. ~ prof) +
      geom_point()
  
#unite: create a single column from two columns
  my_data_long %>%
    separate(., col = spec, into = c('group', 'prof'), sep = "_") %>%
    separate(., col = id, into = c('lang', 'id'), sep = 4) %>%
    unite(., co = 'ident', lang, id, sep = "_", remove = F) %>%
    select(-id) %>% View()
  
#Practice
  #1
mtcars %>%
  select(., hp, disp) %>%
  gather(., key = measurement, val = amount) %>%
  ggplot(., aes(x = measurement, y = amount)) +
    geom_boxplot()

  #2
iris %>%
  select(., -Sepal.Length, -Sepal.Width) %>%
  gather(., key = measurement, val = value, -Species) %>%
  ggplot(., aes(x = measurement, y = value, color = Species)) +
    geom_boxplot()

iris %>%
  select(., -Sepal.Length, -Sepal.Width) %>%
  gather(., key = measurement, val = value, -Species) %>%
  ggplot(., aes(x = measurement, y = value)) +
  facet_grid(. ~ Species) +
  geom_boxplot()

iris %>%
  select(., -Sepal.Length, -Sepal.Width) %>%
  gather(., key = measurement, val = value, -Species) %>%
  ggplot(., aes(x = measurement, y = value, color = Species)) +
  geom_point()

iris %>%
  select(., -Sepal.Length, -Sepal.Width) %>%
  gather(., key = measurement, val = value, -Species) %>%
  ggplot(., aes(x = Species, y = value, color = measurement, dodge = measurement)) +
  geom_jitter(., position = position_dodge(.75, alpha = 0.4)) +
  geom_boxplot()
  
  #3
z_score <- function(x) {(x - mean(x))/sd(x)} 
iris_stand <- iris %>%
    select(., Species, Petal.Length, Petal.Width) %>%
    filter(., Species == "setosa") %>%
    mutate(., z_length = z_score(Petal.Length), 
              z_width = z_score(Petal.Width),
              z_lw = z_length * z_width)
iris_stand %>%    
  ggplot(., aes(x = Petal.Length, y = Petal.Width)) +
      geom_point() +
      geom_smooth(method = 'lm')

iris_stand %>%
  ggplot(., aes(x = z_length, y = z_width)) +
    geom_point() +
    geom_smooth(method = 'lm')

cor(iris_stand$Petal.Length, iris_stand$Petal.Width)
cor.test(iris_stand$Petal.Length, iris_stand$Petal.Width)
sum(iris_stand$z_lw) / (nrow(iris_stand) - 1)
    